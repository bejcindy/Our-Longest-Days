using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CameraShake : MonoBehaviour
{
    //Variables for the starting position of the camera, as well as quantities for the 'shake' distance.
    private Transform cameraStart;
    private Vector3 cameraBeginPos;
    private float shakeAmountX;
    private float shakeAmountY;
    //Time for when camera will shake as well as a bool to reset camera back to starting position.
    private float time = 0;
    private bool reset = true;

    public void Start()
    {
        //Takes Camera object in Scene and its position and sets it as the starting position.
        cameraStart = Camera.main.gameObject.transform;
        cameraBeginPos = cameraStart.position;
        //Function to begin the camera shaking and then stop and restart after .01 secs.
        InvokeRepeating("cameraShake", 0, .01f);
    }
    /// <summary>
    /// Sets the variables of 'amount' and 'time' which will be used externally to gauge how strong and how long the shake will be
    /// </summary>
    /// <param name="amount"></param>
    /// <param name="_time"></param>
    public void ScreenShake(float amount, float _time)
    {
        cameraBeginPos = cameraStart.position;

        //Sets amounts for X an Y to be equal to the shakeAmounts in order to place a cap on the shaking amount.
        if (amount > shakeAmountX && amount > shakeAmountY)
        {
            //This disallows the amount values set anywhere externally to excede those set by the shakeAmounts for each axis.
            shakeAmountX = amount;
            shakeAmountY = amount;
        }
        //The same as above is done here with the time variable.
        if (_time > time)
        {
            time = _time;
        }
        reset = false;
    }
    /// <summary>
    /// Performs the shaking of the camera only when the shakeAmounts and time is set to 0.
    /// </summary>
    void cameraShake()
    {
        if (shakeAmountX > 0 && shakeAmountY > 0 && time > 0)
        {
            //Uses Sin and Mathf functions in order to create a smoother oscillating effect on the camera instead of a jagged shake
            time -= .01f;
            float quakeAmtX = UnityEngine.Random.value * Mathf.Sin(shakeAmountX) * 2 - shakeAmountX;
            float quakeAmtY = UnityEngine.Random.value * Mathf.Sin(shakeAmountY) * 2 - shakeAmountY;
            //Functions below allow for camera movement to increase based on the amounts generated by the quakeAmts for each axis.
            Vector3 pp = cameraBeginPos;
            pp.y += quakeAmtY;
            pp.x += quakeAmtX;
            Camera.main.transform.position = pp;
        }
        //This finally resets the camera position back to its starting position.
        else if (!reset)
        {
            Camera.main.transform.position = cameraBeginPos;
            reset = true;
        }
    }
}
